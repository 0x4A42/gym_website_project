<?php
session_start();
include("../conn.php");

/**
 * Checks the logged in user is a coach
 * If not, kicks them to the login page.
 */
if (isset($_SESSION['gymafi_superadmin'])) {
    $superadminID = $_SESSION['gymafi_superadmin'];
} else if (isset($_SESSION['gymafi_coachid'])) {
    header("location: ../dashboard.php");
} else if (isset($_SESSION['gymafi_userid'])) {
    header("location: ../dashboard.php");
} else {
    header("location: ../login.php");
}

/**
 * If the admin clicks on the 'create new coach' button, allows them to create a new user who will be a coach
 */
if (isset($_POST['createNewCoach'])) {

?>

    <!-- modal for changing personal details-->

    <div class='modal is-active' id='editPersonalDetails'>
        <div class='modal-background '></div>
        <div class='modal-card'>
            <header class='modal-card-head'>
                <?php
                echo "
          <p class='modal-card-title'>Creating New Coach</p>";
                ?>
                <button class='delete cancelUpdate' aria-label='close'></button>

            </header>

            <section class='modal-card-body'>

                <form action='superadmin.php' method='POST' id='addCoachForm'>

                    <div class='field'>
                        <label class='label'>Coach Username: </label>
                        <div class='control'>


                            <input class='input' id='coachUsername' type='text' placeholder='Coach Username' name='coachUsername'>

                        </div>
                        <p class='help is-danger' id='coachUsernameWarn'> </p>
                    </div>


                    <div class='field'>
                        <label class='label'>Email address: </label>
                        <div class='control'>

                            <input class='input' type='email' id='emailChange' placeholder='Coachemail@email.com' name='coachEmail'>

                        </div>
                        <p class='help is-danger' id='coachEmailWarn'> </p>
                    </div>

                    <div class='field'>
                        <label class='label'>Date of Birth: </label>
                        <div class='control'>

                            <input class='input' type='date' id='coachDOB' name='coachDOB'>

                        </div>
                        <p class='help is-danger' id='coachDOBWarn'> </p>
                    </div>

            </section>
            <footer class='modal-card-foot'>
                <p class='control'>
                    <input type='submit' class='button is-success' id='detailsSubmit' value='Save changes' name='addCoachButton'>
                    <button class='button cancelUpdate'>Cancel</button>
            </footer>
            </form>
            </section>

        </div>
    </div>
<?php
}



/**
 * If the admin submits the create coach form, attempts to process their input and 
 * create a new coach.
 */
if (isset($_POST['addCoachButton'])) {

    $coachUserName = $_POST['coachUsername'];
    $sanitisedUsername = $conn->real_escape_string(trim($coachUserName));
    $coachEmail = $_POST['coachEmail'];
    $sanitisedEmail = $conn->real_escape_string(trim($coachEmail));
    $coachDOB = $_POST['coachDOB'];
    $updatedDOB = date('Y-m-d', strtotime($coachDOB));
    $sanitisedDOB = $conn->real_escape_string(trim($updatedDOB));


    /*
  * Explodes DOB entered by user and a new date generated by server (today's date). 
  * If user DOB entered is < 18, does not allow sign up.
  * Adapted from <https://stackoverflow.com/questions/4529640/get-the-year-from-specified-date-php/4529680>
  */
    $todaysDate = date('Y-m-d');
    $yearOfDOB = explode('-', $updatedDOB);
    $DOBYear = $yearOfDOB[0];
    $todayExplode = explode('-', $todaysDate);
    $todayYear = $todayExplode[0];
    $minimumYear = ($todayYear - 18);
    $maximumYear = 1940;
    /**
     * Checks if fields are null. If so, does not send query
     * Else, if all is okay it sends the query and a success message is sent
     */
    if ($DOBYear > $minimumYear) {
        $superAdminError = "New coach not created -  must be over 18.";
    } else if ($maximumYear > $DOBYear) {
        $superAdminError = "New coach not created - invalid date of birth (1940 minimum).";
    } else if ((strlen($sanitisedUsername) > 25)) {
        $superAdminError = "Error with creating coach - username  out of range boundary. Must be under 25 characters.";
    } else if ((strlen($sanitisedEmail) > 35)) {
        $superAdminError = "Error with creating coach - email out of range boundary. Must be under 55 characters.";
    } else if (($coachUserName == null)   || ($coachEmail == null)
        || ($coachDOB == null)

    ) {
        $updateFailed = "Your details have not been updated - null fields submitted.";
    } else {


        /**
         * Random password generator developed from a mix of the following:
         * https://stackoverflow.com/questions/6101956/generating-a-random-password-in-php
         * https://defuse.ca/generating-random-passwords.htm
         */
        $password_charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!$^*';

        function create_random_password($charset, $pass_size)
        {
            $random_character_number = strlen($charset);
            $pass_gen = '';
            for ($pass_length = 0; $pass_length < $pass_size; $pass_length++) { // set up loop to run for pass size as determined in params
                $random_char = $charset[mt_rand(0, $random_character_number  - 1)]; // generate a random character
                $pass_gen .= $random_char; // concatenate new password
            }
            return $pass_gen;
        }

        $newpassword =  create_random_password($password_charset, 20);
        $generatedPass = $conn->real_escape_string(trim($newpassword)); //sanitise due to possible special characters

        $determineLastCoachID = "SELECT * FROM webdev_users WHERE role = 2";

        $executeDetermineLastCoachID = $conn->query($determineLastCoachID);
        if (!$executeDetermineLastCoachID) {
            echo $conn->error;
        }

        $lastCoachID = 0;

        /**
         * Determine the last coach ID. 
         * Coach IDs are currently 1 - 3 whilst clients start at 100,
         * no worry of duplication of coach ID and client ID in this business scenario
         */
        while ($row = $executeDetermineLastCoachID->fetch_assoc()) {
            $id = $row['id'];

            if ($id > $lastCoachID) {
                $lastCoachID = $id;
            }
        }

        $lastCoachID++; // increment one to be above last coach ID





        $createCoach = "INSERT INTO webdev_users (id, username, password, email, role, date_of_birth, approved)
     VALUES ($lastCoachID, '$sanitisedUsername', '$generatedPass', '$sanitisedEmail', 2, '$sanitisedDOB', 0)";

        $executeCreateCoach = $conn->query($createCoach);

        if (!$executeCreateCoach) {
            echo $conn->error;
            $superAdminError = "Error creating coach";
        }

        $superAdminSucc = "Coach successfully entered.";
    }
}


/**
 * Attempts to allow the superadmin to approve the coach, add additional details for the coach table.
 */
if (isset($_POST['approveCoach'])) {
    $coachID = $_POST['coachID'];
?>


    <div class='modal is-active' id='editPersonalDetails'>
        <div class='modal-background '></div>
        <div class='modal-card'>
            <header class='modal-card-head'>
                <?php
                echo "
                  <p class='modal-card-title'>Creating New Coach</p>";
                ?>
                <button class='delete cancelUpdate' aria-label='close'></button>

            </header>

            <section class='modal-card-body'>

                <form action='superadmin.php' method='POST' id='addCoachForm'>




                    <div class='field'>
                        <label class='label'>Coach Name: </label>
                        <div class='control'>


                            <input class='input' id='coachName' type='text' placeholder='Coach Name' name='coachName'>

                        </div>
                        <p class='help is-danger' id='coachNameWarn'> </p>
                    </div>


                    <div class='field'>
                        <label class='label'>Coach Area: </label>
                        <div class='control'>

                            <input class='input' type='text' id='coachArea' placeholder='Nutrition' name='coachArea'>

                        </div>
                        <p class='help is-danger' id='coachAreaWarn'> </p>
                    </div>

                    <?php
                    echo " <input type='hidden' name='coachID' value='$coachID'>";
                    ?>
            </section>
            <footer class='modal-card-foot'>
                <p class='control'>
                    <input type='submit' class='button is-success' id='detailsSubmit' value='Save changes' name='approveCoachSubmit'>
                    <button class='button cancelUpdate'>Cancel</button>
            </footer>
            </form>
            </section>

        </div>
    </div>
<?php
}

/**
 * If the admin posts the approve coach form, attempts to process it.
 */
if (isset($_POST['approveCoachSubmit'])) {

    $coachName = $_POST['coachName'];
    $sanitisedName = $conn->real_escape_string(trim($coachName));
    $coachArea = $_POST['coachArea'];
    $sanitisedArea = $conn->real_escape_string(trim($coachArea));
    $coachID = $_POST['coachID'];





    /**
     * Checks name is alpahbetical and that no fields are empty
     */

    if (preg_match('~[0-9]~', $coachName)) {
        $superAdminError = "Your details have not been updated - name must only contain letters.";
    } else if ((strlen($sanitisedName) > 35)) {
        $superAdminError = "Error with approving coach - name  out of range boundary. Must be under 35 characters.";
    } else if ((strlen($sanitisedArea) > 75)) {
        $superAdminError = "Error with approving coach - name  out of range boundary. Must be under 75 characters.";
    } else if (($coachName == null)   || ($coachArea == null)

    ) {
        $updateFailed = "Your details have not been updated - null fields submitted.";
    } else {
        /**
         * transaction adapted from online tutorial <https://www.youtube.com/watch?v=CNt9HPqDIVc>
         * 
         */
        $conn->autocommit(false);

        $superAdminErrorArray = array();
        $a = $conn->query("UPDATE webdev_users SET approved = 1 WHERE id = $coachID");
        if ($a == false) {
            array_push($superAdminErrorArray, 'Problem approving coach.');
            echo $conn->error;
        }
        $b = $conn->query("INSERT INTO webdev_coach (name, area, user_id) VALUES ('$sanitisedName', '$sanitisedArea', $coachID)");
        if ($b == false) {
            array_push($superAdminErrorArray, 'Problem inserting coach details.');
            echo $conn->error;
        }

        /**
         * If array error not empty, error occured and rollback occurs.
         */
        if (!empty($superAdminErrorArray)) {
            foreach ($superAdminErrorArray as $thing) {
                echo $thing;
            }
            $conn->rollback();
        } else {
            $conn->commit();
            $superAdminSucc = "Coach successfully approved.";
        }
    }
}


/**
 * If the admin selects the edit coach details buttons, displays a modal to 
 * allow them to edit specific details like coach email, username etc.
 */
if (isset($_POST['editCoachDetails'])) {
    $coachID = $_POST['coachID'];

    $getCoachDetails = $conn->prepare("SELECT username, email, date_of_birth, name, area FROM webdev_users
    INNER JOIN webdev_coach 
    ON webdev_users.id = webdev_coach.user_id
    WHERE webdev_users.id = ?");
    $getCoachDetails->bind_param("i", $coachID);
    $getCoachDetails->execute();
    $getCoachDetails->store_result();
    $getCoachDetails->bind_result($coachUsername, $coachEmail, $coachDOB, $coachName, $coachArea);
    $getCoachDetails->fetch();

    $coachDOB = date('Y-m-d', strtotime($coachDOB)); // change format so it shows 
?>
    <!-- modal for changing personal details-->

    <div class='modal is-active' id='editPersonalDetails'>
        <div class='modal-background '></div>
        <div class='modal-card'>
            <header class='modal-card-head'>
                <?php
                echo "
                  <p class='modal-card-title'>Editing Coach</p>";
                ?>
                <button class='delete cancelUpdate' aria-label='close'></button>

            </header>

            <section class='modal-card-body'>

                <form action='superadmin.php' method='POST' id='editCoachForm'>



                    <div class='field'>
                        <label class='label'>Username: </label>
                        <div class='control'>


                            <input class='input' id='usernameChange' type='text' value="<?php echo $coachUsername ?>" name='newUsername'>

                        </div>
                        <p class='help is-danger' id='usernameChangeWarn'> </p>
                    </div>


                    <div class='field'>
                        <label class='label'>Name: </label>
                        <div class='control'>


                            <input class='input' id='realNameChange' type='text' value="<?php echo $coachName ?>" name='newName'>

                        </div>
                        <p class='help is-danger' id='realNameChangeWarn'> </p>
                    </div>


                    <div class='field'>
                        <label class='label'>Email: </label>
                        <div class='control'>

                            <input class='input' type='email' id='emailChange' value="<?php echo $coachEmail ?>" name='newEmail'>

                        </div>
                        <p class='help is-danger' id='emailChangeWarn'> </p>
                    </div>

                    <div class='field'>
                        <label class='label'>Date of Birth: </label>
                        <div class='control'>

                            <input class='input' type='date' id='coachDOB' value="<?php echo $coachDOB ?>" name='coachDOB'>

                        </div>

                    </div>

                    <div class='field'>
                        <label class='label'>Coach Area: </label>
                        <div class='control'>

                            <input class='input' type='text' id='coachArea' value="<?php echo $coachArea ?>" name='coachArea'>

                        </div>
                        <p class='help is-danger' id='coachAreaWarn'> </p>
                    </div>

                    <div class='field'>
                        <label class='label'>Change your profile photo: </label>
                        <div class='control select'>
                            <select name='changePic'>
                                <?php


                                $getCoachCurrentPic = $conn->prepare("SELECT image from webdev_coach WHERE user_id = ?");
                                $getCoachCurrentPic->bind_param("i", $coachID);
                                $getCoachCurrentPic->execute();
                                $getCoachCurrentPic->store_result();
                                $getCoachCurrentPic->bind_result($currentPic);
                                $getCoachCurrentPic->fetch();

                                $getPics = "SELECT webdev_images.path, webdev_images.description
                  FROM webdev_images
                  WHERE webdev_images.user_id= $superadminID
                  ORDER BY webdev_images.description ASC;";
                                $executeGetPics = $conn->query($getPics);
                                if (!$executeGetPics) {
                                    echo $conn->error;
                                }
                                while ($row = $executeGetPics->fetch_assoc()) {


                                    $picPath = $row['path'];
                                    $imgDesc = $row['description'];



                                    if ($picPath == $currentPic) {
                                        echo "<option selected value='$picPath'> $imgDesc ($picPath)</option>";
                                    } else {
                                        echo "<option value='$picPath'> $imgDesc ($picPath)</option>";
                                    }
                                }
                                ?>
                            </select>
                        </div>

                        <?php
                        echo " <input type='hidden' name='coachID' value='$coachID'>";
                        ?>
            </section>
            <footer class='modal-card-foot'>
                <p class='control'>
                    <input type='submit' class='button is-success newCoachDetailsIfValid' id='detailsSubmit' value='Save changes' name='editCoachDetailsSubmit'>
                    <button class='button cancelUpdate'>Cancel</button>
            </footer>
            </form>
            </section>

        </div>
    </div>
<?php
}

/**
 * If the admin submits the edit coach details form, attempts to validate it.
 */
if (isset($_POST['editCoachDetailsSubmit'])) {
    $coachID = $_POST['coachID'];

    $newCoachUsername = $_POST['newUsername'];
    $sanitisedUsername = $conn->real_escape_string(trim($newCoachUsername));
    $newCoachName = $_POST['newName'];
    $sanitisedName = $conn->real_escape_string(trim($newCoachName));
    $newCoachEmail = $_POST['newEmail'];
    $sanitisedEmail = $conn->real_escape_string(trim($newCoachEmail));
    $newCoachDOB = $_POST['coachDOB'];
    $updatedDOB = date('Y-m-d', strtotime($newCoachDOB));
    $sanitisedDOB = $conn->real_escape_string(trim($updatedDOB));
    $newCoachArea = $_POST['coachArea'];
    $sanitisedArea = $conn->real_escape_string(trim($newCoachArea));
    $newPicPath = $_POST['changePic'];
    $sanitisedPicPath = $conn->real_escape_string(trim($newPicPath));

    /*
  * Explodes DOB entered by user and a new date generated by server (today's date). 
  * If user DOB entered is < 18, does not allow sign up.
  * Adapted from <https://stackoverflow.com/questions/4529640/get-the-year-from-specified-date-php/4529680>
  */
    $todaysDate = date('Y-m-d');
    $yearOfDOB = explode('-', $updatedDOB);
    $DOBYear = $yearOfDOB[0];
    $todayExplode = explode('-', $todaysDate);
    $todayYear = $todayExplode[0];
    $minimumYear = ($todayYear - 18);
    $maximumYear = 1940;



    // get current details to compare
    $getCoachDetails = $conn->prepare("SELECT username, email, date_of_birth, name, area, image FROM webdev_users
    INNER JOIN webdev_coach 
    ON webdev_users.id = webdev_coach.user_id
    WHERE webdev_users.id = ?");
    $getCoachDetails->bind_param("i", $coachID);
    $getCoachDetails->execute();
    $getCoachDetails->store_result();
    $getCoachDetails->bind_result($coachUsername, $coachEmail, $coachDOB, $coachName, $coachArea, $currentImage);
    $getCoachDetails->fetch();
    /**
     * Checks if fields are null. If so, does not send query
     * Else, if all is okay it sends the query and a success message is sent
     */
    if ($DOBYear > $minimumYear) {
        $superAdminError = "Coach details not updated -  must be over 18.";
    } else if ($maximumYear > $DOBYear) {
        $superAdminError = "Coach details not updated - invalid date of birth (1940 minimum).";
    } else if (($newCoachUsername == $coachUsername) && ($newCoachEmail == $coachEmail)
        && ($newCoachName == $coachName) && ($updatedDOB == $coachDOB)
        && ($newCoachArea == $coachArea) && ($newPicPath == $currentImage)
    ) {
        $superAdminError = "Could not update coach details - no fields changed.";
    } else if (preg_match('~[0-9]~', $newCoachName)) {
        $superAdminError = "Your details have not been updated - name must only contain letters.";
    } else if (preg_match('~[0-9]~', $sanitisedName)) {
        $superAdminError = "Your details have not been updated - name must only contain letters.";
    } else if ((strlen($sanitisedUsername) > 25)) {
        $superAdminError = "Error with editing coach - username out of range boundary. Must be under 25 characters.";
    } else if ((strlen($sanitisedName) > 35)) {
        $superAdminError = "Error with editing coach - name out of range boundary. Must be under 35 characters.";
    } else if ((strlen($sanitisedEmail) > 35)) {
        $superAdminError = "Error with editing coach - email out of range boundary. Must be under 55 characters.";
    } else if ((strlen($sanitisedArea) > 75)) {
        $superAdminError = "Error with editing coach - area out of range boundary. Must be under 75 characters.";
    } else if (($newCoachUsername == null)   || ($newCoachEmail == null)
        || ($newCoachName == null)  || ($updatedDOB == null)
        || ($newCoachArea == null)

    ) {
        $superAdminError = "Your details have not been updated - null fields submitted.";
    } else {
        /**
         * transaction adapted from online tutorial <https://www.youtube.com/watch?v=CNt9HPqDIVc>
         * 
         */
        $conn->autocommit(false);

        $superAdminErrorArray = array();
        $a = $conn->query("UPDATE webdev_users SET username ='$sanitisedUsername', email='$sanitisedEmail', 
        date_of_birth='$sanitisedDOB' 
        WHERE id = $coachID");
        if ($a == false) {
            array_push($superAdminErrorArray, 'Problem updating details of coach coach.');
            echo $conn->error;
        }
        $b = $conn->query("UPDATE webdev_coach SET name = '$sanitisedName', area='$sanitisedArea', 
        image='$sanitisedPicPath'
         WHERE user_id = $coachID");
        if ($b == false) {
            array_push($superAdminErrorArray, 'Problem inserting coach details.');
            echo $conn->error;
        }

        /**
         * If array error not empty, error occured and rollback occurs.
         */
        if (!empty($superAdminErrorArray)) {
            foreach ($superAdminErrorArray as $thing) {
                echo $thing;
            }
            $conn->rollback();
        } else {
            $conn->commit();
            $superAdminSucc = "Coach successfully updated.";
        }
    }
}


/**
 * If admin clicks on delete coach button, attempts to process the delete after a confirmation box is clicked.
 */
if (isset($_POST['deleteCoach'])) {

    $coachID = $_POST['coachID'];

    /**
     * transaction adapted from online tutorial <https://www.youtube.com/watch?v=CNt9HPqDIVc>
     * 
     * This transaction deleted all entries within the database which contain the user who is being deleted.
     * As there are foreign key constraints, cannot just delete the user - must delete all of their relevant data,
     * such as inbox, stats, etc before actually deleting the user from the table. 
     * This will free up the username to be taken again. 
     */
    $conn->autocommit(false);

    $superAdminErrorArray = array();

    $a = $conn->query("DELETE FROM webdev_appointments WHERE coach_id = '$coachID'");
    if ($a == false) {
        array_push($superAdminErrorArray, 'Problem deleting appointments from db');
        echo $conn->error;
    }
    $b = $conn->query("DELETE FROM webdev_groups WHERE coach = '$coachID'");
    if ($b == false) {
        array_push($superAdminErrorArray, 'Problem removing user as member of group.');
        echo $conn->error;
    }


    $c = $conn->query("DELETE FROM webdev_inbox WHERE recipient = '$coachID'");
    if ($c == false) {
        array_push($superAdminErrorArray, 'Problem deleting inbox from db');
        echo $conn->error;
    }



    $d = $conn->query("DELETE FROM webdev_inbox WHERE sender = '$coachID'");
    if ($d == false) {
        array_push($superAdminErrorArray, 'Problem deleting inbox from db');
        echo $conn->error;
    }

    $e = $conn->query("DELETE FROM webdev_coach WHERE user_id = '$coachID'");
    if ($e == false) {
        array_push($superAdminErrorArray, 'Problem deleting user from db');
        echo $conn->error;
    }

    $f = $conn->query("DELETE FROM webdev_users WHERE id = '$coachID'");
    if ($f == false) {
        array_push($superAdminErrorArray, 'Problem deleting user from db');
        echo $conn->error;
    }



    /**
     * If array error not empty, error occured and rollback occurs.
     */
    if (!empty($superAdminErrorArray)) {
        foreach ($superAdminErrorArray as $thing) {
            echo $thing;
        }
        $conn->rollback();
    } else {
        $conn->commit();
        $superAdminSucc = "Coach successfully deleted.";
    }
}









/**
 * If the coach clicks this, resets the password of the user 
 * with a randomly generated password and emails it to them.
 */
if (isset($_POST['resetCoach'])) {

    $coachID = $_POST['coachID'];

    // get user email 
    $getClientEmail = $conn->prepare("SELECT email, username FROM webdev_users
    WHERE id = ?");
    $getClientEmail->bind_param("i", $coachID);
    $getClientEmail->execute();
    $getClientEmail->store_result();
    $getClientEmail->bind_result($coachEmail, $coachUsername);
    $getClientEmail->fetch();
    /**
     * Random password generator developed from a mix of the following:
     * https://stackoverflow.com/questions/6101956/generating-a-random-password-in-php
     * https://defuse.ca/generating-random-passwords.htm
     */
    $password_charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!$^*';

    function create_random_password($charset, $pass_size)
    {
        $random_character_number = strlen($charset);
        $pass_gen = '';
        for ($pass_length = 0; $pass_length < $pass_size; $pass_length++) { // set up loop to run for pass size as determined in params
            $random_char = $charset[mt_rand(0, $random_character_number  - 1)]; // generate a random character
            $pass_gen .= $random_char; // concatenate new password
        }
        return $pass_gen;
    }

    $newpassword =  create_random_password($password_charset, 20);
    $generatedPass = $conn->real_escape_string(trim($newpassword)); //sanitise due to possible special characters


    $updatePass = "UPDATE webdev_users SET password = AES_Encrypt('$generatedPass', '09UYO2ELHJ290OYEH22098H9ty')
    WHERE id='$coachID'";

    $executeUpdatePass = $conn->query($updatePass);

    if (!$executeUpdatePass) {
        echo $conn->error;
    }


    // Generate message to send to user
    $message = "Dear $coachUsername, \n
    This is an automated message, please do not reply. \n
    You are receiving this email because anadmin reset your password. \n
    Your new, temporary, password is: $newpassword. \n
    Please change this upon your next login. \n

    Kind regards, \n
    Gymafi";



    // Send to the user's email
    mail($coachEmail, 'Gymafi - Password Reset', $message);
    // if entered info on system, email changed and new password emailed to them.
    $superAdminSucc = "Password successfully reset.";
}


?>
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Gymafi | Admin </title>
    <link href="../styles/bulma.css" rel="stylesheet">
    <link href="../styles/lightbox.css" rel="stylesheet">
    <link href="../styles/gui.css" rel="stylesheet">
    <script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
    <script src="../script/myScript.js"></script>
    <script src="../script/lightbox.js"></script>

</head>

<!-- Displays log out button-->

<body class="has-background-grey-lighter">
    <nav class='navbar is-dark' role='navigation' aria-label='main navigation'>
        <div class='navbar-end'>
            <div class='navbar-item'>
                <div class='buttons'>
                    <a class='button is-danger' href='../logout.php'>
                        Logout
                    </a>
                </div>
            </div>
        </div>
        </div>
    </nav>

    <!-- page header/hero-->
    <section class='hero is-small'>
        <div class='hero-body has-background-success'>
            <div class='container'>
                <h1 class='title myTitle'>
                    Gymafi
                </h1>
                <h2 class='subtitle myTitle'>
                    Unlocking Your Potential
                </h2>
            </div>
        </div>
    </section>

    <nav class='navbar is-success' role='navigation' aria-label='main navigation'>


        <a role='button' class='navbar-burger' aria-label='menu' aria-expanded='false'>
            <span aria-hidden='true'></span>
            <span aria-hidden='true'></span>
            <span aria-hidden='true'></span>
        </a>
        </div>

        <div id='navbarBasicExample' class='navbar-menu has-background-success'>
            <div class='navbar-start myNav'>
                <a class='navbar-item has-text-black has-background-warning' href='superadmin.php'>
                    Admin Panel
                </a>


                <a class='navbar-item has-text-black' href='../gallery.php'>
                    Gallery
                </a>



            </div> <!-- end of nav-bar item-->
        </div> <!-- end of navbarBasicExample-->


        </div>
    </nav>




    <!--Displays all of the current clients linked to the logged in coach-->
    <div id='dashColumns'>

        <div class='column is-9' id='editContentColumn'>
            <article class='message is-dark'>
                <div class='message-header'>
                    <p>
                        <h1 class='title titleHeader'>Update Coach Info</h1>
                    </p>

                </div>
                <div class='message-body'>
                    <nav class='level'>
                        <!-- Left side -->
                        <div class='level-left'>
                            <div class='level-item'>
                                Upon selecting a coach, you will be able to perform the following functions:
                            </div>


                        </div>

                        <!-- Right side -->
                        <div class='level-right'>

                            <div class='level-item'>
                                <form action='superadmin.php' method='POST'>
                                    <input type='submit' value='Create Coach' class='button is-info' name='createNewCoach'></a>
                                </form>
                            </div>

                        </div>
                    </nav>

                    <nav class='level'>
                        <!-- Left side -->
                        <div class='level-left'>
                            <div class='level-item'>

                                <ul id='clientInfo'>
                                    <li>Update select user data </li>
                                    <li>Reset their password, which will be emailed to them </li>
                                </ul>


                            </div>

                        </div>

                        <!-- Right side -->
                        <div class='level-right'>



                        </div>
                    </nav>

                    <?php


                    if (isset($superAdminError)) {
                        echo "<p class='displayError'> $superAdminError</p>";
                    } else if (isset($superAdminSucc)) {
                        echo "<p class='displaySucc'> $superAdminSucc</p>";
                    }

                    $getAllCoaches = "SELECT id, username, email, approved
                    FROM webdev_users
                    WHERE role = 2";
                    $executeGetAllCoaches = $conn->query($getAllCoaches);

                    if (!$executeGetAllCoaches) {
                        echo $conn->error;
                    }
                    echo "<div class='columns'>";
                    /*
                    * variable to track pages edit articles printed out,
                    *  when gets to 2 ends current columns row and starts new one
                    */
                    $pageCounter = 0;
                    while ($row = $executeGetAllCoaches->fetch_assoc()) {
                        $userName = $row['username'];
                        $userID = $row['id'];
                        $userEmail = $row['email'];
                        $approved =  $row['approved'];


                        echo "<div class='column'> 
                        <article class='message is-dark'>
                        <form action='superadmin.php' method='POST'>
                        <div class='message-header'>
                            <p>
                            ", htmlentities($userName, ENT_QUOTES), "        </p>
        
                        </div>
                        <div class='message-body'>
                                               
                        <input type='hidden' name='coachID' value='$userID'>
                        <input type='hidden' name='client_name' value='$userName'>
                        
    
                        </div>
                       

                        
                        <input type='submit' value='Edit Details' class='button is-info editClientButton' name='editCoachDetails'></a>";
                        if ($approved == 0) {
                            echo "<input type='submit' value='Approve Coach' class='button is-success editClientButton' name='approveCoach'></a>";
                        }


                    ?>

                        <input type='submit' value='Reset Password' class='button is-warning editClientButton' onclick="return confirm(' Are you sure you wish to reset the password of this user?')" name='resetCoach'></a>
                        <input type='submit' value='Delete Coach' class='button is-danger editClientButton' onclick="return confirm(' Are you sure you wish to delete this user? This CANNOT be undone.')" name='deleteCoach'></a>

                        </form>
            </article>
        </div>
    <?php
                        $pageCounter++;
                        if ($pageCounter % 2 == 0) {
                            echo "</div>
                            <div class='columns'>";
                        }
                    }

                    echo "
                    <div class='column'> 
                    </div>
                    </div>
                        </div>";
    ?>


    </div>
    </div>


    <!-- page footer-->
    <div class='myFooter'>
        <footer class='footer has-background-dark alsoMyFooter' id='myFootInbox'>
            <div class='content has-text-centered has-text-white'>
                <p>
                    <span id='boldFoot'>CSC7062 Project</span> by Jordan Brown (40282125).
                </p>
            </div>
        </footer>
    </div>
</body>


</html>